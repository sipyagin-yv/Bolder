                ; ОБРАБОТКА ЛАБИРИНТА!!!proc            SKA2                mov     [PSK],0         ; Флаг движения                mov     [HeroDie],FALSE                mov     [SoundsCount],0 ; Кол-во звуковых эффектов                mov     esi,Maze+191     ; HL = Maze+191, DE = Maze+191 + 16                mov     bh,MAZE_WIDTH   ; B                mov     bl,MAZE_HEIGHT  ; CSKNXT:          mov     al,[esi]                cmp     al,41                ja      SR12                movzx   edi,al                jmp     dword [SwitchTable+edi*4]SwitchTable:    dd      SR12    ; 00 =Пустота                dd      SM1     ; 01 =Камень - падает, скатывается                dd      SM2     ; 02 =Алмаз - падает, скатывается                dd      SR12    ; 03 =Песок                dd      SR12    ; 04 =Стены                dd      UPR     ; 05 =Человечек - передвигается                dd      SM6     ; 06                dd      SR12    ; 07                dd      SM8     ; 08                dd      SR12    ; 09                dd      SR12    ; 10                dd      SM11    ; 11                dd      SR12    ; 12                dd      SR12    ; 13                dd      SR12    ; 14                dd      SR12    ; 15                dd      SM16    ; 16                dd      UPR     ; 17                dd      SR12    ; 18                dd      SM19    ; 19                dd      SM20    ; 20                dd      SM21    ; 21                dd      SR12    ; 22                dd      SM23    ; 23                dd      UPR     ; 24                dd      SR12    ; 25                dd      SM26    ; 26                dd      UPR     ; 27                dd      SM28    ; 28                dd      SM29    ; 29                dd      SM30    ; 30                dd      SR12    ; 31                dd      SR12    ; 32                dd      SM33    ; 33                dd      SM34    ; 34                dd      SR12    ; 35                dd      SM36    ; 36                dd      SM37    ; 37                dd      SM38    ; 38                dd      SM39    ; 39                dd      SM40    ; 40                dd      SM41    ; 41SR12:           dec     esi   SR14:           dec     bh                   jnz     SKNXT                mov     bh,16                dec     bl                jnz     SKNXT                call    MakeSoundEffects                stdcall DrawLevel, Maze                retSM8:            mov     byte [esi],2                jmp     SR12SM1:            bne     byte [esi+16],0,SR0      ; КАМЕНЬ: Можем упасть?                mov     byte [esi],16            ; КАМЕНЬ: Падаем вниз...                mov     byte [esi+16],15                jmp     SR124SR0:            inc     esi                      ; КАМЕНЬ: Скатиться вправо?                be      bh,16,SR1                mov     al,[esi]                or      al,[esi+16]                jnz     SR1                mov     byte [esi],1             ; КАМЕНЬ: Катимся вправо...                dec     esi                mov     byte [esi],0                jmp     SR124SR1:            dec     esi                      ; КАМЕНЬ: Скатиться влево?                dec     esi                be      bh,1,SR14                mov     al,[esi]                or      al,[esi+16]                jnz     SR14                mov     byte [esi],1             ; КАМЕНЬ: Катимся влево...                inc     esi                mov     byte [esi],0                dec     esi                dec     bh                jmp     SR124                SM2:            bne     byte [esi+16],0,SR2      ; АЛМАЗ: Может упасть?                mov     byte [esi],11            ; АЛМАЗ: Падает вниз...                mov     byte [esi+16],10                jmp     SR124SR2:            inc     esi                      ; АЛМАЗ: Скатиться вправо?                be      bh,16,SR3                mov     al,[esi]                or      al,[esi+16]                jnz     SR3                mov     byte [esi],2             ; АЛМАЗ: Катимся вправо...                dec     esi                mov     byte [esi],0                jmp     SR124SR3:            dec     esi                      ; АЛМАЗ: Скатиться влево?                dec     esi                be      bh,1,SR14                mov     al,[esi]                or      al,[esi+16]                jnz     SR14                mov     byte [esi],2             ; АЛМАЗ: Катимся влево...                inc     esi                mov     byte [esi],0                dec     esi                dec     bh                jmp     SR124SR124:          mov     [PSK],1                 ; Хоть что-то двинулось...                jmp     SR12SM11:           mov     byte [esi],0             ; АЛМАЗ: Падение закончилось                mov     byte [esi+16],2                call    BSL                     ; Проверка - кого прибили...                jmp     SR124SM16:           mov     byte [esi],0                mov     byte [esi+16],1                call    BSL                jmp     SR124SM19:           mov     byte [esi],0                mov     byte [esi+16],17                jmp     SR12SM20:           mov     byte [esi],17                mov     byte [esi+16],0                jmp     SR12SM21:           mov     byte [esi],20            ; меняем 21 на 20, так как                jmp     SR12                    ; проход по уровню идет снизу                                                ; вверх, и если сразу поставить                                                ; 20 то человечек будет бежать                                                ; вверх со скоростью света.SM23:           mov     byte [esi],24                dec     esi                mov     byte [esi],0                inc     esi                jmp     SR12SM26:           mov     byte [esi],0                dec     esi                mov     byte [esi],27                dec     bh                jmp     SR12SM29:           mov     byte [esi],28                dec     esi                mov     byte [esi],0                inc     esi                jmp     SR12SM30:           mov     byte [esi],0                dec     esi                mov     byte [esi],28                dec     bh                jmp     SR12SM33:           mov     byte [esi],0                mov     byte [esi+16],28                jmp     SR12SM34:           mov     byte [esi],28                mov     byte [esi+16],0                jmp     SR12SM40:           mov     byte [esi],34                jmp     SR12SM36:           mov     byte [esi],6                dec     esi                mov     byte [esi],0                inc     esi                jmp     SR12SM37:           mov     byte [esi],0                dec     esi                mov     byte [esi],6                dec     bh                jmp     SR12SM38:           mov     byte [esi],0                mov     byte [esi+16],6                jmp     SR12SM39:           mov     byte [esi],6                mov     byte [esi+16],0                jmp     SR12SM41:           mov     byte [esi],39                jmp     SR12UPR:            mov     [HeroCoord],esi              ; Координаты человека                push    esi                mov     eax,[KOD]                be      eax,KBD_MOVE_LEFT,U1L                be      eax,KBD_MOVE_RIGHT,U1R                be      eax,KBD_MOVE_UP,U1U                be      eax,KBD_MOVE_DOWN,U1D                be      eax,KBD_DESTRUCT,SELFDES       ; Self-destruct                pop     esi                mov     byte [esi],5                jmp     SR12SELFDES:        push    ebx                sub     esi,17                   ; Самоуничтожение                dec     bl                dec     bh                call    UBR1                pop     ebx                pop     esi                jmp     SR12U1L:            mov     [KOD],KBD_MOVE_LEFT    ; ЧЕЛОВЕЧЕК: Влево                mov     edx,-1                call    DWR                mov     byte [esi],26                dec     esi                mov     byte [esi],25                pop     esi                dec     esi                dec     bh                jmp     SR12U1R:            mov     [KOD],KBD_MOVE_RIGHT    ; ЧЕЛОВЕЧЕК: Вправо                mov     edx,1                call    DWR                mov     byte [esi],22                inc     esi                mov     byte [esi],23                pop     esi                jmp     SR12U1U:            mov     [KOD],KBD_MOVE_UP       ; ЧЕЛОВЕЧЕК: Вверх                mov     edx,-16                call    DWR                mov     byte [esi-16],21                mov     byte [esi],18                pop     esi                jmp     SR12U1D:            mov     [KOD],KBD_MOVE_DOWN     ; ЧЕЛОВЕЧЕК: Вниз                mov     edx,16                call    DWR                mov     byte [esi],19                mov     byte [esi+16],18                pop     esi                jmp     SR12DWR:            push    esi                push    ebx                call    PROW                add     esi,edx                mov     al,[esi]                be      al,2,ZWK                be      al,1,SDW                be      al,3,UED                be      al,0,UED                pop     ebx                pop     esi                pop     eax              ; Адрес возврата                pop     esi                jmp     SR12ZWK:            inc     [SoundsCount];call    SOO                dec     [AlmazesCount]                add     [OBK],SCORE_TREASUREUED:            pop     ebx                pop     esi                retSDW:            call    PROW            ; СДВИГ КАМНЕЙ!!!                add     esi,edx                mov     al,[esi]                be      al,1,SDW                be      al,0,UEDO                pop     ebx                pop     esi                pop     eax              ; Адрес возврата                pop     esi                jmp     SR12                ; Проверка на пределы уровняPROW:           mov     eax,[KOD]                be      eax,KBD_MOVE_LEFT,R1L                be      eax,KBD_MOVE_RIGHT,R1R                be      eax,KBD_MOVE_UP,R1U                be      eax,KBD_MOVE_DOWN,R1D                retR1L:            dec     bh                jz      EP2                retR1R:            inc     bh                be      bh,17,EP2                retR1U:            dec     bl                jz      EP2                retR1D:            inc     bl                be      bl,13,EP2                retEP2:            pop     eax              ; Адрес возврата                pop     ebx                pop     esi                pop     eax              ; Адрес возврата                pop     esi                jmp     SR12UEDO:           mov     byte [esi],1                pop     ebx                pop     esi                ret                ; Проверка: грохнул ли кого камень?BSL:            mov     al,[esi+32]                be      al,5,UB2                be      al,17,UB2                be      al,24,UB2                be      al,27,UB2                be      al,6,UB2                be      al,28,UB2                bne     al,0,.L1                ret .L1:           cmp     al,5                jc      ZW                retZW:             inc     [SoundsCount];call    SOO                retUB2:            push    ebx                push    esi                add     esi,15                dec     bh                inc     bl                call    UBR1                pop     esi                pop     ebx                ret                ; ВЗРЫВ!!!UBR1:           inc     [SoundsCount];call    SOOTRM:            call    PKR                inc     esi                inc     bh                call    PKR                inc     esi                inc     bh                call    PKR                add     esi,16                inc     bl                call    PKR                dec     esi                dec     bh                call    PKR                dec     esi                dec     bh                call    PKR                add     esi,16                inc     bl                call    PKR                inc     esi                inc     bh                call    PKR                inc     esi                inc     bh                call    PKR                inc     [SoundsCount];call    SOO                retPKR:            be      bh,17,.Ex                be      bh,0,.Ex                be      bl,13,.Ex                be      bl,0,.Ex                mov     al,[esi]                be      al,7,.Ex                ; бетон непробиваем                cmp     al,29                jnc     .Ex                be      al,28,ZP                be      al,2,.Ex                ; уже алмаз                be      al,5,PP                 ; человечек - взрывается                cmp     al,17                jnc     PP                cmp     al,7                jnc     .Ex                jmp     ZP .Ex:           retZP:             mov     byte [esi],2                inc     [AlmazesCount]                retPP:             mov     [HeroDie],TRUE        ; ЧЕЛОВЕЧЕК Прихлопнут :(                jmp     ZPSM6:            push    ebx                push    esi                cmp     esi,[HeroCoord]                jc      MM0_SE1:            dec     esi                dec     bh                be      bh,0,SE2                mov     al,[esi]                cmp     al,28                jnc     SE2                be      al,5,UBR2                cmp     al,17                jnc     UBR2                bne     al,0,SE2                mov     byte [esi],31                inc     esi                mov     byte [esi],37                pop     esi                dec     esi                pop     ebx                dec     bh                jmp     SR12SE2:            sub     esi,15                inc     bh                dec     bl                be      bl,0,E5_                mov     al,[esi]                cmp     al,28                jnc     E5_                be      al,5,UBR2                cmp     al,17                jnc     UBR2                bne     al,0,E5_                mov     byte [esi],41                pop     esi                mov     byte [esi],32                pop     ebx                jmp     SR12E5_:            pop     esi                pop     ebx                mov     byte [esi],28                jmp     SR12MM0_:           inc     esi                inc     bh                be      bh,17,SQ0                mov     al,[esi]                cmp     al,28                jnc     SQ0                be      al,5,UBR2                cmp     al,17                jnc     UBR2                bne     al,0,SQ0                mov     byte [esi],36                pop     esi                mov     byte [esi],31                pop     ebx                jmp     SR12SQ0:            add     esi,15                dec     bh                inc     bl                be      bl,13,E6_                mov     al,[esi]                cmp     al,28                jnc     E6_                be      al,5,UBR2                cmp     al,17                jnc     UBR2                bne     al,0,E6_                mov     byte [esi],32                pop     esi                mov     byte [esi],38                pop     ebx                jmp     SR12E6_:            pop     esi                pop     ebx                mov     byte [esi],28                jmp     SR12SM28:           push    ebx                push    esi                cmp     esi,[HeroCoord]                jnc     MM1_SE3:            dec     esi                dec     bh                be      bh,0,SE4                mov     al,[esi]                cmp     al,28                jnc     SE4                be      al,5,UBR2                cmp     al,17                jnc     UBR2                bne     al,0,SE4                mov     byte [esi],31                pop     esi                mov     byte [esi],30                dec     esi                pop     ebx                dec     bh                jmp     SR12SE4:            sub     esi,15                inc     bh                dec     bl                be      bl,0,E7_                mov     al,[esi]                cmp     al,28                jnc     E7_                be      al,5,UBR2                cmp     al,17                jnc     UBR2                bne     al,0,E7_                mov     byte [esi],40                pop     esi                mov     byte [esi],32                pop     ebx                jmp     SR12E7_:            pop     esi                pop     ebx                mov     byte [esi],6                jmp     SR12MM1_:           inc     esi                inc     bh                be      bh,17,SQ1                mov     al,[esi]                cmp     al,28                jnc     SQ1                be      al,5,UBR2                cmp     al,17                jnc     UBR2                bne     al,0,SQ1                mov     byte [esi],29                pop     esi                mov     byte [esi],31                pop     ebx                jmp     SR12SQ1:            add     esi,15                dec     bh                inc     bl                be      bl,13,E8_                mov     al,[esi]                cmp     al,28                jnc     E8_                be      al,5,UBR2                cmp     al,17                jnc     UBR2                bne     al,0,E8_                mov     byte [esi],32                pop     esi                mov     byte [esi],33                pop     ebx                jmp     SR12E8_:            pop     esi                pop     ebx                mov     byte [esi],6                jmp     SR12UBR2:           sub     esi,17                dec     bh                dec     bl                call    TRM                pop     esi                pop     ebx                jmp     SR12endp
